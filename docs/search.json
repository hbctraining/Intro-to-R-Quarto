[
  {
    "objectID": "schedule.html",
    "href": "schedule.html",
    "title": "Workshop Schedule",
    "section": "",
    "text": "Time\nTopic\nInstructor\n\n\n\n\n10:00 - 10:30\nWorkshop Introduction\nWill\n\n\n10:30 - 11:45\nIntroduction to R and RStudio\nElizabeth\n\n\n11:45 - 12:00\nOverview of self-learning materials and homework submission\nWill\n\n\n\n\n\nI. Please study the contents and work through all the code within the following lessons:\n\nR Syntax and Data Structure\n\n\nClick here for a preview of this lesson\n\nIn order to utilize R effectively, you will need to understand what types of data you can use in R and also how you can store data in “objects” or “variables”. This lesson will cover: - Assigning a value to a object - What types of information can you store in R - What are the different objects that you can use to store data in R\n\nFunctions and Arguments\n\n\nClick here for a preview of this lesson\n\nFunctions are the basic “commands” used in R to get something done. To use functions (denoted by function_name followed by “()”), one has to enter some information within the parenthesis and optionally some arguments to change the default behavior of a function. You can also create your own functions! When you want to perform a task or a series of tasks more than once, creating a custom function is the best way to go. In this lesson you will explore: - Using built-in functions - Creating your own custom functions\n\nReading in and inspecting data\n\n\nClick here for a preview of this lesson\n\nWhen using R, it is almost a certainty that you will have to bring data into the R environment. In this lesson you will learn: - Reading different types (formats) of data - Inspecting the contents and structure of the dataset once you have read it in\n\n\n\nComplete the exercises:\n\n\nEach lesson above contains exercises; please go through each of them.\nCopy over your solutions into the Google Form the day before the next class.\n\n\n\n\n\nIf you get stuck due to an error while runnning code in the lesson, email us\n\n\n\n\n\n\n\n\n\nTime\nTopic\nInstructor\n\n\n\n\n10:00 - 10:50\nQuestions about self-learning\nAll\n\n\n10:50 - 11:15\nIn-class exercises + Answer key\nElizabeth\n\n\n11:15 - 12:00\nData Wrangling: Subsetting Vectors and Factors\nWill\n\n\n\n\n\nI. Please study the contents and work through all the code within the following lessons:\n\nPackages and libraries\n\n\nClick here for a preview of this lesson\n\nBase R is incredibly powerful, but it cannot do everything. R has been built to encourage community involvement in expanding functionality. Thousands of supplemental add-ons, also called “packages” have been contributed by the community. Each package comprises of several functions that enable users to perform their desired analysis. This lesson will cover: - Descriptions of package repositories - Installing a package - Loading a package - Accessing the documention for your installed packages and getting help\n\nData wrangling: data frames, matrices and lists\n\n\nClick here for a preview of this lesson\n\nIn class we covered data wrangling (extracting/subsetting) information from single-dimensional objects (vectors, factors). The next step is to learn how to wrangle data in two-dimensional objects.This lesson will cover: - Examining and extracting values from two-dimensional data structures using indices, row names, or column names - Retreiving information from lists\n\nThe %in% operator\n\n\nClick here for a preview of this lesson\n\nVery often you will have to compare two vectors to figure out if, and which, values are common between them. The %in% operator can be used for this purpose.This lesson will cover: - Implementing the %in% operator to evaluate two vectors - Distinguishing %in% from == and other logical operators - Using any() and all() functions\n\nReordering and matching\n\n\nClick here for a preview of this lesson\n\nSometimes you will want to rearrange values within a vector (row names or column names). The match() function can be very powerful for this task.This lesson will cover: - Maunually rearranging values within a vector - Implementing the match() function to automatically rearrange the values within a vector\n\nSetting up a data frame to plot (+ the map() function)\n\n\nClick here for a preview of this lesson\n\nWe will be starting with visualization in the next class. To set up for this, you need to create a new metadata data frame with information from the counts data frame. You will need to use a function over every column within the counts data frame iteratively. You could do that manually, but it is error-prone; the map() family of functions makes this more efficient.This lesson will cover: - Utilizing map_dbl() to take the average of every column in a data frame - Briefly discuss other functions within the map() family of functions - Create a new data frame for plotting\n\n\n\nComplete the exercises:\n\n\nEach lesson above contains exercises; please go through each of them.\nCopy over your solutions into the Google Form the day before the next class.\n\n\nPrepare for in-class exercise:\n\n\nDownload the animals.csv, by right-clicking on the link and “Save Link As…” to place the file into the data directory.\nRead the .csv file into your environment and assign it to a variable called animals. Be sure to check that your row names are the different animals.\nSave the R project when you close Rstudio.\n\n\n\n\n\nIf you get stuck due to an error while runnning code in the lesson, email us\n\n\n\n\n\n\n\n\n\nTime\nTopic\nInstructor\n\n\n\n\n10:00 - 10:35\nQuestions about self-learning lessons\nAll\n\n\n10:35 - 11:15\nIn-class exercises + Answer key\nWill\n\n\n11:15 - 12:00\nPlotting with the ggplot2 package\nElizabeth\n\n\n\n\n\nI. Please study the contents and work through all the code within the following lessons:\n\nUsing custom functions for consistent plots\n\n\nClick here for a preview of this lesson\n\nWhen creating your plots in ggplot2 you may want to have consistent formatting (using theme() functions) across your plots, e.g. if you are generating plots for a manuscript. This lesson will cover: - Developing a custom function for creating consistently formatted plots\n\nGenerating a boxplot with ggplot2\n\n\nClick here for a preview of this lesson\n\nPreviously, you created a scatterplot using ggplot2. However, ggplot2 can be used to create a very wide variety of plots. One of the other frequently used plots you can create with ggplot2 is a barplot.This lesson will cover: - Creating and customizing a barplot using ggplot2\n\nWriting to file and exporting plots\n\n\nClick here for a preview of this lesson\n\nNow that you have completed some analysis in R, you will need to eventually export that work out of R/RStudio. R provides lots of flexibility in what and how you export your data and plots.This lesson will cover: - Exporting your figures from R using a variety of file formats - Writing your data from R to a file\n\nFinding help\n\n\nClick here for a preview of this lesson\n\nHopefully, this course has given you the basic tools you need to be successful when using R. However, it would be impossible to cover every aspect of R and you will need to be able to troubleshoot future issues as they arise.This lesson will cover: - Suggestions for how to best ask for help - Where to look for help\n\nTidyverse\n\n\nClick here for a preview of this lesson\n\nThe Tidyverse suite of integrated packages are designed to work together to make common data science operations more user friendly. Tidyverse is becoming increasingly prevalent and it is necessary that R users are conversant in the basics of Tidyverse. We have already used two Tidyverse packages in this workshop (ggplot2 and purrr) and in this lesson we will learn some key features from a few additional packages that make up Tidyverse. This lesson will cover: - Usage of pipes for connecting together multiple commands - Tibbles for two-dimensional data storage - Data wrangling within Tidyverse\n\n\n\nComplete the exercises:\n\n\nEach lesson above contains exercises; please go through each of them.\nCopy over your solutions into the Google Form the day before the next class.\n\n\n\n\n\nIf you get stuck due to an error while runnning code in the lesson, email us\n\n\n\n\n\n\n\n\n\nTime\nTopic\nInstructor\n\n\n\n\n10:00 - 10:35\nQuestions about self-learning lessons\nAll\n\n\n10:35 - 11:15\nIn-class exercises + Answer key\nWill\n\n\n11:15 - 11:45\nDiscussion, Q & A\nAll\n\n\n11:45 - 12:00\nWrap Up\nWill\n\n\n\n\n\n\nExercises\n\n\n\n\n\nDay 1 homework\nDay 2 homework\nDay 3 homework\nFinal exercises\n\n\n\n\n\n\nDGE workshop\nSingle-cell RNA-seq workshop\nRMarkdown\nFunctional analysis\nMore ggplot2\nggplot2 cookbook\nRunning R and Rstudio on O2\n\n\n\n\n\nOnline learning resources\nAll hbctraining materials\n\n\n\n\n\nbase R cheatsheet\nRStudio cheatsheet\nggplot2 cheatsheet"
  },
  {
    "objectID": "schedule.html#day-1",
    "href": "schedule.html#day-1",
    "title": "Workshop Schedule",
    "section": "",
    "text": "Time\nTopic\nInstructor\n\n\n\n\n10:00 - 10:30\nWorkshop Introduction\nWill\n\n\n10:30 - 11:45\nIntroduction to R and RStudio\nElizabeth\n\n\n11:45 - 12:00\nOverview of self-learning materials and homework submission\nWill\n\n\n\n\n\nI. Please study the contents and work through all the code within the following lessons:\n\nR Syntax and Data Structure\n\n\nClick here for a preview of this lesson\n\nIn order to utilize R effectively, you will need to understand what types of data you can use in R and also how you can store data in “objects” or “variables”. This lesson will cover: - Assigning a value to a object - What types of information can you store in R - What are the different objects that you can use to store data in R\n\nFunctions and Arguments\n\n\nClick here for a preview of this lesson\n\nFunctions are the basic “commands” used in R to get something done. To use functions (denoted by function_name followed by “()”), one has to enter some information within the parenthesis and optionally some arguments to change the default behavior of a function. You can also create your own functions! When you want to perform a task or a series of tasks more than once, creating a custom function is the best way to go. In this lesson you will explore: - Using built-in functions - Creating your own custom functions\n\nReading in and inspecting data\n\n\nClick here for a preview of this lesson\n\nWhen using R, it is almost a certainty that you will have to bring data into the R environment. In this lesson you will learn: - Reading different types (formats) of data - Inspecting the contents and structure of the dataset once you have read it in\n\n\n\nComplete the exercises:\n\n\nEach lesson above contains exercises; please go through each of them.\nCopy over your solutions into the Google Form the day before the next class.\n\n\n\n\n\nIf you get stuck due to an error while runnning code in the lesson, email us"
  },
  {
    "objectID": "schedule.html#day-2",
    "href": "schedule.html#day-2",
    "title": "Workshop Schedule",
    "section": "",
    "text": "Time\nTopic\nInstructor\n\n\n\n\n10:00 - 10:50\nQuestions about self-learning\nAll\n\n\n10:50 - 11:15\nIn-class exercises + Answer key\nElizabeth\n\n\n11:15 - 12:00\nData Wrangling: Subsetting Vectors and Factors\nWill\n\n\n\n\n\nI. Please study the contents and work through all the code within the following lessons:\n\nPackages and libraries\n\n\nClick here for a preview of this lesson\n\nBase R is incredibly powerful, but it cannot do everything. R has been built to encourage community involvement in expanding functionality. Thousands of supplemental add-ons, also called “packages” have been contributed by the community. Each package comprises of several functions that enable users to perform their desired analysis. This lesson will cover: - Descriptions of package repositories - Installing a package - Loading a package - Accessing the documention for your installed packages and getting help\n\nData wrangling: data frames, matrices and lists\n\n\nClick here for a preview of this lesson\n\nIn class we covered data wrangling (extracting/subsetting) information from single-dimensional objects (vectors, factors). The next step is to learn how to wrangle data in two-dimensional objects.This lesson will cover: - Examining and extracting values from two-dimensional data structures using indices, row names, or column names - Retreiving information from lists\n\nThe %in% operator\n\n\nClick here for a preview of this lesson\n\nVery often you will have to compare two vectors to figure out if, and which, values are common between them. The %in% operator can be used for this purpose.This lesson will cover: - Implementing the %in% operator to evaluate two vectors - Distinguishing %in% from == and other logical operators - Using any() and all() functions\n\nReordering and matching\n\n\nClick here for a preview of this lesson\n\nSometimes you will want to rearrange values within a vector (row names or column names). The match() function can be very powerful for this task.This lesson will cover: - Maunually rearranging values within a vector - Implementing the match() function to automatically rearrange the values within a vector\n\nSetting up a data frame to plot (+ the map() function)\n\n\nClick here for a preview of this lesson\n\nWe will be starting with visualization in the next class. To set up for this, you need to create a new metadata data frame with information from the counts data frame. You will need to use a function over every column within the counts data frame iteratively. You could do that manually, but it is error-prone; the map() family of functions makes this more efficient.This lesson will cover: - Utilizing map_dbl() to take the average of every column in a data frame - Briefly discuss other functions within the map() family of functions - Create a new data frame for plotting\n\n\n\nComplete the exercises:\n\n\nEach lesson above contains exercises; please go through each of them.\nCopy over your solutions into the Google Form the day before the next class.\n\n\nPrepare for in-class exercise:\n\n\nDownload the animals.csv, by right-clicking on the link and “Save Link As…” to place the file into the data directory.\nRead the .csv file into your environment and assign it to a variable called animals. Be sure to check that your row names are the different animals.\nSave the R project when you close Rstudio.\n\n\n\n\n\nIf you get stuck due to an error while runnning code in the lesson, email us"
  },
  {
    "objectID": "schedule.html#day-3",
    "href": "schedule.html#day-3",
    "title": "Workshop Schedule",
    "section": "",
    "text": "Time\nTopic\nInstructor\n\n\n\n\n10:00 - 10:35\nQuestions about self-learning lessons\nAll\n\n\n10:35 - 11:15\nIn-class exercises + Answer key\nWill\n\n\n11:15 - 12:00\nPlotting with the ggplot2 package\nElizabeth\n\n\n\n\n\nI. Please study the contents and work through all the code within the following lessons:\n\nUsing custom functions for consistent plots\n\n\nClick here for a preview of this lesson\n\nWhen creating your plots in ggplot2 you may want to have consistent formatting (using theme() functions) across your plots, e.g. if you are generating plots for a manuscript. This lesson will cover: - Developing a custom function for creating consistently formatted plots\n\nGenerating a boxplot with ggplot2\n\n\nClick here for a preview of this lesson\n\nPreviously, you created a scatterplot using ggplot2. However, ggplot2 can be used to create a very wide variety of plots. One of the other frequently used plots you can create with ggplot2 is a barplot.This lesson will cover: - Creating and customizing a barplot using ggplot2\n\nWriting to file and exporting plots\n\n\nClick here for a preview of this lesson\n\nNow that you have completed some analysis in R, you will need to eventually export that work out of R/RStudio. R provides lots of flexibility in what and how you export your data and plots.This lesson will cover: - Exporting your figures from R using a variety of file formats - Writing your data from R to a file\n\nFinding help\n\n\nClick here for a preview of this lesson\n\nHopefully, this course has given you the basic tools you need to be successful when using R. However, it would be impossible to cover every aspect of R and you will need to be able to troubleshoot future issues as they arise.This lesson will cover: - Suggestions for how to best ask for help - Where to look for help\n\nTidyverse\n\n\nClick here for a preview of this lesson\n\nThe Tidyverse suite of integrated packages are designed to work together to make common data science operations more user friendly. Tidyverse is becoming increasingly prevalent and it is necessary that R users are conversant in the basics of Tidyverse. We have already used two Tidyverse packages in this workshop (ggplot2 and purrr) and in this lesson we will learn some key features from a few additional packages that make up Tidyverse. This lesson will cover: - Usage of pipes for connecting together multiple commands - Tibbles for two-dimensional data storage - Data wrangling within Tidyverse\n\n\n\nComplete the exercises:\n\n\nEach lesson above contains exercises; please go through each of them.\nCopy over your solutions into the Google Form the day before the next class.\n\n\n\n\n\nIf you get stuck due to an error while runnning code in the lesson, email us"
  },
  {
    "objectID": "schedule.html#day-4",
    "href": "schedule.html#day-4",
    "title": "Workshop Schedule",
    "section": "",
    "text": "Time\nTopic\nInstructor\n\n\n\n\n10:00 - 10:35\nQuestions about self-learning lessons\nAll\n\n\n10:35 - 11:15\nIn-class exercises + Answer key\nWill\n\n\n11:15 - 11:45\nDiscussion, Q & A\nAll\n\n\n11:45 - 12:00\nWrap Up\nWill\n\n\n\n\n\n\nExercises\n\n\n\n\n\nDay 1 homework\nDay 2 homework\nDay 3 homework\nFinal exercises"
  },
  {
    "objectID": "schedule.html#building-on-the-basic-r-knowledge",
    "href": "schedule.html#building-on-the-basic-r-knowledge",
    "title": "Workshop Schedule",
    "section": "",
    "text": "DGE workshop\nSingle-cell RNA-seq workshop\nRMarkdown\nFunctional analysis\nMore ggplot2\nggplot2 cookbook\nRunning R and Rstudio on O2"
  },
  {
    "objectID": "schedule.html#resources",
    "href": "schedule.html#resources",
    "title": "Workshop Schedule",
    "section": "",
    "text": "Online learning resources\nAll hbctraining materials"
  },
  {
    "objectID": "schedule.html#cheatsheets",
    "href": "schedule.html#cheatsheets",
    "title": "Workshop Schedule",
    "section": "",
    "text": "base R cheatsheet\nRStudio cheatsheet\nggplot2 cheatsheet"
  },
  {
    "objectID": "description.html",
    "href": "description.html",
    "title": "Introduction to R",
    "section": "",
    "text": "Audience\nComputational skills required\nDuration\n\n\n\n\nBiologists\nNone\n4-session online workshop (~ 8 hours of trainer-led time)\n\n\n\n\n\nThis repository has teaching materials for a hands-on Introduction to R workshop. The workshop will introduce participants to the basics of R and RStudio. R is a simple programming environment that enables the effective handling of data, while providing excellent graphical support. RStudio is a tool that provides a user-friendly environment for working with R. These materials are intended to provide both basic R programming knowledge and its application for increasing efficiency for data analysis.\nNote for Trainers: Please note that the schedule linked below assumes that learners will spend between 2-3 hours on reading through, and completing exercises from selected lessons between classes.\n\n\n\n\nR syntax: Familiarize the basic syntax and the use of Rstudio.\nData types and data structures: Describe frequently-used data types and data structures in R.\nData inspection and wrangling: Demonstrate the utilization of functions and indices to inspect and subset data from various data structures.\nData visualization: Apply the ggplot2 package to create plots for data visualization.\n\n\n\n\n\nWorkshop schedule (trainer-led learning)\nSelf-learning\n\n\n\n\nDownload the most recent versions of R and RStudio for the appropriate OS using the links below:\n\nR\nRStudio\n\n\n\n\nAll the files used for the above lessons are linked within, but can also be accessed here.\n\n\n\n\nTo cite material from this course in your publications, please use:\n\n\n\n\n\n\nImportant\n\n\n\nMeeta Mistry, Mary Piper, Jihe Liu, & Radhika Khetani. (2021, May 5). hbctraining/Intro-to-R-flipped: R workshop first release. Zenodo. https://doi.org/10.5281/zenodo.4739342. RRID:SCR_025373\n\n\nA lot of time and effort went into the preparation of these materials. Citations help us understand the needs of the community, gain recognition for our work, and attract further funding to support our teaching activities. Thank you for citing this material if it helped you in your data analysis."
  },
  {
    "objectID": "description.html#introduction-to-r",
    "href": "description.html#introduction-to-r",
    "title": "Introduction to R",
    "section": "",
    "text": "Audience\nComputational skills required\nDuration\n\n\n\n\nBiologists\nNone\n4-session online workshop (~ 8 hours of trainer-led time)\n\n\n\n\n\nThis repository has teaching materials for a hands-on Introduction to R workshop. The workshop will introduce participants to the basics of R and RStudio. R is a simple programming environment that enables the effective handling of data, while providing excellent graphical support. RStudio is a tool that provides a user-friendly environment for working with R. These materials are intended to provide both basic R programming knowledge and its application for increasing efficiency for data analysis.\nNote for Trainers: Please note that the schedule linked below assumes that learners will spend between 2-3 hours on reading through, and completing exercises from selected lessons between classes.\n\n\n\n\nR syntax: Familiarize the basic syntax and the use of Rstudio.\nData types and data structures: Describe frequently-used data types and data structures in R.\nData inspection and wrangling: Demonstrate the utilization of functions and indices to inspect and subset data from various data structures.\nData visualization: Apply the ggplot2 package to create plots for data visualization.\n\n\n\n\n\nWorkshop schedule (trainer-led learning)\nSelf-learning\n\n\n\n\nDownload the most recent versions of R and RStudio for the appropriate OS using the links below:\n\nR\nRStudio\n\n\n\n\nAll the files used for the above lessons are linked within, but can also be accessed here.\n\n\n\n\nTo cite material from this course in your publications, please use:\n\n\n\n\n\n\nImportant\n\n\n\nMeeta Mistry, Mary Piper, Jihe Liu, & Radhika Khetani. (2021, May 5). hbctraining/Intro-to-R-flipped: R workshop first release. Zenodo. https://doi.org/10.5281/zenodo.4739342. RRID:SCR_025373\n\n\nA lot of time and effort went into the preparation of these materials. Citations help us understand the needs of the community, gain recognition for our work, and attract further funding to support our teaching activities. Thank you for citing this material if it helped you in your data analysis."
  }
]